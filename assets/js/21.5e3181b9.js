(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{367:function(e,t,r){"use strict";r.r(t);var s=r(43),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("在本章剩下部分我们会讲解"),r("code",[e._v("Fiber节点")]),e._v("是如何被创建并构建"),r("code",[e._v("Fiber树")]),e._v("的。")]),e._v(" "),r("p",[r("code",[e._v("render阶段")]),e._v("开始于"),r("code",[e._v("workLoopConcurrent")]),e._v("方法的调用。")]),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("workLoopConcurrent")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("while")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("workInProgress "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!==")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("null")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("shouldYield")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("performUnitOfWork")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("workInProgress"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),r("p",[e._v("其中"),r("code",[e._v("workInProgress")]),e._v("代表当前已创建的"),r("code",[e._v("workInProgress fiber")]),e._v("。")]),e._v(" "),r("p",[r("code",[e._v("performUnitOfWork")]),e._v("方法会创建下一个"),r("code",[e._v("Fiber节点")]),e._v("并赋值给"),r("code",[e._v("workInProgress")]),e._v("，并将"),r("code",[e._v("workInProgress")]),e._v("与已创建的"),r("code",[e._v("Fiber节点")]),e._v("连接起来构成"),r("code",[e._v("Fiber树")]),e._v("。")]),e._v(" "),r("p",[e._v("如果当前浏览器帧没有剩余时间，"),r("code",[e._v("shouldYield")]),e._v("会中止循环，直到浏览器有空闲时间后再继续遍历。")]),e._v(" "),r("blockquote",[r("p",[e._v("你可以从"),r("a",{attrs:{href:"https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactFiberWorkLoop.new.js#L1534",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),r("OutboundLink")],1),e._v("看到"),r("code",[e._v("workLoopConcurrent")]),e._v("的源码")])]),e._v(" "),r("p",[e._v("我们知道"),r("code",[e._v("Fiber Reconciler")]),e._v("是从"),r("code",[e._v("Stack Reconciler")]),e._v("重构而来，通过遍历的方式实现可中断的递归，所以"),r("code",[e._v("performUnitOfWork")]),e._v("的工作可以分为两部分：“递”和“归”。")]),e._v(" "),r("h2",{attrs:{id:"递-阶段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#递-阶段"}},[e._v("#")]),e._v(" “递”阶段")]),e._v(" "),r("p",[e._v("首先从"),r("code",[e._v("rootFiber")]),e._v("开始向下深度优先遍历。为遍历到的每个"),r("code",[e._v("Fiber节点")]),e._v("调用"),r("a",{attrs:{href:"https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactFiberBeginWork.new.js#L3040",target:"_blank",rel:"noopener noreferrer"}},[e._v("beginWork方法"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("p",[e._v("该方法会根据传入的"),r("code",[e._v("Fiber节点")]),e._v("创建"),r("code",[e._v("子Fiber节点")]),e._v("，并将这两个"),r("code",[e._v("Fiber节点")]),e._v("连接起来。")]),e._v(" "),r("p",[e._v("当遍历到叶子节点（即没有子组件的组件）时就会进入“归”阶段。")]),e._v(" "),r("h2",{attrs:{id:"归-阶段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#归-阶段"}},[e._v("#")]),e._v(" “归”阶段")]),e._v(" "),r("p",[e._v("在“归”阶段会调用"),r("a",{attrs:{href:"https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactFiberCompleteWork.new.js#L652",target:"_blank",rel:"noopener noreferrer"}},[e._v("completeWork"),r("OutboundLink")],1),e._v("处理"),r("code",[e._v("Fiber节点")]),e._v("。")]),e._v(" "),r("p",[e._v("当某个"),r("code",[e._v("Fiber节点")]),e._v("执行完"),r("code",[e._v("completeWork")]),e._v("，如果其存在"),r("code",[e._v("兄弟Fiber节点")]),e._v("（即"),r("code",[e._v("fiber.sibling !== null")]),e._v("），会进入其"),r("code",[e._v("兄弟Fiber")]),e._v("的“递”阶段。")]),e._v(" "),r("p",[e._v("如果不存在"),r("code",[e._v("兄弟Fiber")]),e._v("，会进入"),r("code",[e._v("父级Fiber")]),e._v("的“归”阶段。")]),e._v(" "),r("p",[e._v("“递”和“归”阶段会交错执行直到“归”到"),r("code",[e._v("rootFiber")]),e._v("。至此，"),r("code",[e._v("render阶段")]),e._v("的工作就结束了。")]),e._v(" "),r("h2",{attrs:{id:"例子"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[e._v("#")]),e._v(" 例子")]),e._v(" "),r("p",[e._v("以上一节的例子举例：")]),e._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("App")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("div"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n      i am\n      "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("span"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("KaSong"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("span"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("div"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\nReactDOM"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("render")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("App"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" document"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("getElementById")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'root'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),r("p",[e._v("对应的"),r("code",[e._v("Fiber树")]),e._v("结构：\n"),r("img",{attrs:{src:e.$withBase("/img/fiber.png"),alt:"Fiber架构"}})]),e._v(" "),r("p",[r("code",[e._v("render阶段")]),e._v("会依次执行：")]),e._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[r("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(". rootFiber beginWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(". App Fiber beginWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(". div Fiber beginWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v(". "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"i am"')]),e._v(" Fiber beginWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v(". "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"i am"')]),e._v(" Fiber completeWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("6")]),e._v(". span Fiber beginWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("7")]),e._v(". span Fiber completeWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("8")]),e._v(". div Fiber completeWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("9")]),e._v(". App Fiber completeWork\n"),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),e._v(". rootFiber completeWork\n")])])]),r("div",{staticClass:"custom-block warning"},[r("p",{staticClass:"custom-block-title"},[e._v("注意")]),e._v(" "),r("p",[e._v("之所以没有 “KaSong” Fiber 的 beginWork/completeWork，是因为作为一种性能优化手段，针对只有单一文本子节点的"),r("code",[e._v("Fiber")]),e._v("，"),r("code",[e._v("React")]),e._v("会特殊处理。")])]),e._v(" "),r("details",{staticClass:"custom-block details"},[r("summary",[e._v("自己试一试 Demo")]),e._v(" "),r("p",[e._v("我在"),r("code",[e._v("beginWork")]),e._v("和"),r("code",[e._v("completeWork")]),e._v("调用时打印"),r("code",[e._v("fiber.tag")]),e._v("和"),r("code",[e._v("fiber.type")]),e._v("。")]),e._v(" "),r("p",[e._v("你可以从"),r("a",{attrs:{href:"https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactWorkTags.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("ReactWorkTags.js"),r("OutboundLink")],1),e._v("看到"),r("code",[e._v("Fiber节点")]),e._v("的所有"),r("code",[e._v("tag")]),e._v("定义。")]),e._v(" "),r("p",[e._v("相信多调试几次，你一定能明白方法的调用顺序")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://code.h5jun.com/kexev/edit?html,js,console,output",target:"_blank",rel:"noopener noreferrer"}},[e._v("Demo"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),r("p",[e._v("本节我们介绍了"),r("code",[e._v("render阶段")]),e._v("会调用的方法。在接下来两节中，我们会讲解"),r("code",[e._v("beginWork")]),e._v("和"),r("code",[e._v("completeWork")]),e._v("做的具体工作。")]),e._v(" "),r("h2",{attrs:{id:"参考资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://indepth.dev/the-how-and-why-on-reacts-usage-of-linked-list-in-fiber-to-walk-the-components-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("The how and why on React’s usage of linked list in Fiber to walk the component’s tree"),r("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=a.exports}}]);